# COM-AI v3 Environment Configuration

# --- OpenAI ---
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o-mini

# --- Anthropic ---
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-opus-4-1-20250805

# --- Google Gemini ---
GEMINI_API_KEY=
GEMINI_MODEL=gemini-1.5-pro

# --- Firebase (client config values; Admin uses GOOGLE_APPLICATION_CREDENTIALS) ---
FIREBASE_API_KEY=
FIREBASE_AUTH_DOMAIN=cerebrum-cadre.firebaseapp.com
FIREBASE_PROJECT_ID=cerebrum-cadre
FIREBASE_STORAGE_BUCKET=cerebrum-cadre.firebasestorage.app
FIREBASE_MESSAGING_SENDER_ID=
FIREBASE_APP_ID=
FIREBASE_MEASUREMENT_ID=G-H56KF3F2FR

# --- Google Cloud / Firestore (Admin SDK on backend) ---
GOOGLE_APPLICATION_CREDENTIALS=firebase-credentials.json

# --- PostgreSQL (async, note the real port 5433) ---
POSTGRES_HOST=localhost
POSTGRES_PORT=5433
POSTGRES_DB=com_ai_v3
POSTGRES_USER=comai
POSTGRES_PASSWORD=change_me
DATABASE_URL=postgresql+asyncpg://comai:change_me@localhost:5433/com_ai_v3

# --- Database Engine Knobs (SQLAlchemy / Optional) ---
# Used by src/api/db/session.py to configure pooling & DB health.
# If unset, safe defaults are applied (echo=false, pre_ping=true, pool_size=5, max_overflow=10, recycle=3600).

# Log SQL statements (dev only): true|false
DB_ECHO=false

# Disable pooling (use NullPool; good for tests/one-off scripts): 1|0
DB_DISABLE_POOL=0

# Validate connections before use: true|false
DB_POOL_PRE_PING=true

# Base pool size (QueuePool): integer
DB_POOL_SIZE=5

# Additional connections allowed beyond pool_size: integer
DB_MAX_OVERFLOW=10

# Recycle pooled connections after N seconds (avoid stale connections): integer
DB_POOL_RECYCLE_SECONDS=3600

# --- App settings ---
ENVIRONMENT=development
LOG_LEVEL=INFO
# Comma-separated list (parse-safe for python-dotenv)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# --- Provider Settings ---
PROVIDER_TIMEOUT=30
PROVIDER_MAX_RETRIES=3
PROVIDER_CACHE_TTL=300

# --- Feature flags ---
FIRESTORE_MIRROR_ENABLED=true
